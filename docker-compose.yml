version: '3.8'

services:
  ugc2_mongo_db:
    image: mongo:4.4.20-rc0-focal
    restart: always
    mem_limit: 1g
    cpus: 0.5
    expose:
      - "27017"
    environment:
      MONGO_INITDB_DATABASE: ugc2
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.runCommand('ping').ok" ]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "27017:27017"

  mongo_express_open_data:
    image: mongo-express:1.0.0-alpha
    restart: always
    expose:
      - "8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: ugc2_mongo_db
      ME_CONFIG_MONGODB_PORT: 27017
    ports:
      - "8081:8081"
#  fastapi:
#    build:
#      context: ./ugc_fastapi
#    image: ugcfastapi-image
#    env_file:
#      - ./.env
#    depends_on:
#      kafka-zookeeper:
#        condition: service_healthy
#
#    container_name: ugcfastapi_container
#    restart: unless-stopped
#
#  nginx:
#    image: nginx:1.22.1
#    container_name: nginx_container
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
#      - ./nginx/localhost.crt:/etc/ssl/certs/localhost.crt
#      - ./nginx/localhost.key:/etc/ssl/private/localhost.key
#    depends_on:
#      - fastapi
#    ports:
#      - "443:443"
#      - "80:80"
#    restart: always
#
#volumes:
#  kafka_volume: