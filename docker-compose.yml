version: '3.8'

services:
  fastapi:
    build:
      context: ./ugc_fastapi
    image: ugcfastapi-image
    env_file:
      - ./.env
    depends_on:
      kafka-zookeeper:
        condition: service_healthy

    container_name: ugcfastapi_container
    restart: unless-stopped

  nginx:
    image: nginx:1.22.1
    container_name: nginx_container
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/localhost.crt:/etc/ssl/certs/localhost.crt
      - ./nginx/localhost.key:/etc/ssl/private/localhost.key
      - ./tmp/logs/nginx/:/var/log/nginx/
    depends_on:
      - fastapi
    ports:
      - "443:443"
      - "80:80"
    restart: always

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.6
    environment:
      XPACK_MONITORING_ENABLED: "false"
      ES_HOST: "elasticsearch:9200"
    ports:
      - "5044:5044/udp"
    volumes:
      - ./elk/logstash/logstash.conf:/config/logstash.conf:ro
    command: logstash -f /config/logstash.conf

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
    environment:
      discovery.type: single-node
    ports:
      - 9200:9200
    volumes:
      - ./tmp/esdata:/tmp/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.6
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.17.6
    volumes:
      - ./tmp/logs/nginx:/var/log/nginx:ro
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
    depends_on:
      - fastapi
      - nginx
      - logstash
      - elasticsearch
      - kibana
    links:
      - logstash

volumes:
  kafka_volume: